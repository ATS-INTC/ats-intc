<?xml version="1.0" encoding="utf-8"?>

<device schemaVersion="1.3"
  xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
  xs:noNamespaceSchemaLocation="cmsis-svd.xsd">
  <name>ats-intc</name>
  <version>0.0</version>
  <description>Asynchronous task scheduler and Interrupt controller description</description>

  <addressUnitBits>8</addressUnitBits>                  <!-- byte addressable memory -->
  <width>64</width>                                     <!-- bus width is 64 bits -->
  <size>64</size>                                       <!-- this is the default size (number of bits) of all peripherals
                                                                       and register that do not define "size" themselves -->
  <resetValue>0x0000000000000000</resetValue>                   <!-- by default all bits of the registers are initialized to 0
  on reset -->
  <resetMask>0xFFFFFFFFFFFFFFFF</resetMask>                     <!-- by default all 32Bits of the registers are used -->

  <peripherals>
    <!-- axi_dma_0 -->
    <peripheral>
      <name>ATS-INTC</name>
      <description>Asynchronous task scheduler, IPC controller and Interrupt controller description</description>
      <baseAddress>0xF000000</baseAddress>     <!-- mmio baseaddr -->
      <size>64</size>            <!-- default bit-width of any register contained in the device -->
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000000</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <cluster>
          <dim>4093</dim>
          <dimIncrement>0x1000</dimIncrement>
          <dimName>processes</dimName>
          <name>process%s</name>
          <description>Related registers of one process</description>
          <addressOffset>0x0</addressOffset>
          <access>read-write</access>

          <cluster>
            <name>ats</name>
            <description>Async task scheduler of one process</description>
            <addressOffset>0x0</addressOffset>
            <access>read-write</access>

            <register>
              <dim>4</dim>
              <dimIncrement>0x8</dimIncrement>
              <dimName>control</dimName>
              <name>control-byte%s</name>
              <description>Control field of the Async task scheduler</description>
              <addressOffset>0x0</addressOffset>
              <access>read-write</access>
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <name>membuf</name>
              <description>Memory buffer of the Async task scheduler</description>
              <addressOffset>0x20</addressOffset>
              <access>write-only</access>
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <name>dequeue</name>
              <description>Deque position of the Async task scheduler</description>
              <addressOffset>0x28</addressOffset>
              <access>read-only</access>
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <dim>250</dim>
              <dimIncrement>0x8</dimIncrement>
              <dimName>enqueue-regs</dimName>
              <name>enqueue%s</name>
              <description>Enqueue position of the Async task scheduler</description>
              <addressOffset>0x30</addressOffset>
              <access>write-only</access>
              <dataType>uint64_t</dataType>
            </register>
          </cluster>

          <cluster>
            <name>ipcc</name>
            <description>IPC controller of one process</description>
            <addressOffset>0x800</addressOffset>
            <access>read-write</access>

            <register>
              <name>control</name>
              <description>Control field of the IPC controller</description>
              <addressOffset>0x0</addressOffset>
              <access>read-write</access>
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <name>membuf</name>
              <description>Membuf field of the IPC controller</description>
              <addressOffset>0x8</addressOffset>
              <access>write-only</access>
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <name>ipc-message</name>
              <description>IPC message pointer of the IPC controller</description>
              <addressOffset>0x10</addressOffset>
              <access>read-write</access> <!--因为不知道这些IPC控制器里的寄存器的用途，我都把access设定成read-write了-->
              <dataType>uint64_t</dataType>
            </register>

            <register>
              <dim>16</dim>
              <dimIncrement>0x8</dimIncrement>
              <dimName>ipc-bq-regs</dimName>
              <name>ipc-bq%s</name>
              <description>BQ field of the IPC controller</description>
              <addressOffset>0x18</addressOffset>
              <access>read-write</access>
              <dataType>uint64_t</dataType>
            </register>
          </cluster>
        </cluster>

        <cluster>
          <name>intc</name>
          <description>Interrupt controller</description>
          <addressOffset>0xFFD000</addressOffset>
          <access>read-write</access>

          <register>
            <dim>16</dim>
            <dimIncrement>0x8</dimIncrement>
            <dimName>control</dimName>
            <name>control-byte%s</name>
            <description>Control field of the Interrupt controller</description>
            <addressOffset>0x0</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <dim>1024</dim>
            <dimIncrement>0x8</dimIncrement>
            <dimName>enqueue-regs</dimName>
            <name>enqueue%s</name>
            <description>Enqueue position of the Interrupt controller</description>
            <addressOffset>0x80</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>
        </cluster>
      </registers>
    </peripheral>
  </peripherals>

</device>